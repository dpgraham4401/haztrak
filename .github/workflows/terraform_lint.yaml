name: "Terraform lint"
# This workflow is responsible for running the Haztrak react client tests.

on:
  pull_request:
    branches:
      - disabled
    paths:
      - "infra/**/*.tf"

jobs:
  check_terraform_fmt:
    name: "Terraform Format"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: ./infra/gcp/dev
    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      # Install the latest version of Terraform CLI
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: "Terraform Format"
        run: terraform fmt -check -recursive

      - name: "Terraform Validate"
        id: validate
        run: terraform validate ..

      - name: "Comment on PR"
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
