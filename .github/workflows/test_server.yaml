name: "Trak Service Tests"
permissions:
  contents: read
# This workflow is responsible for running the Haztrak server tests.
# It spins up a postgres container and runs the tests against it.

env:
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: password1
  POSTGRES_DB: trak_db

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - "server/**"
      - ".github/workflows/test_server.yaml"
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    working-directory: ./server

jobs:
  run_server_tests:
    name: "Run Server Tests"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Setup Python'
        uses: actions/setup-python@v5
        with:
          python-version-file: "./server/.python-version"

      - name: "Install uv"
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: "**/pyproject.toml"

      - name: "Install Python dependencies"
        run: uv sync --locked --group test

      - name: "Run Tests"
        env:
          TRAK_SECRET_KEY: "django-insecure-%btjqoun@6ps$e@8bw$48s+!x1e4aiz&5p2nrf6cmiw4)jsx5d"
          TRAK_CORS_DOMAIN: http://localhost:3000
          TRAK_TIMEZONE: America/New_York
          TRAK_HOST: localhost
          TRAK_RCRAINFO_ENV: preprod
          TRAK_DEBUG: true
          TRAK_DB_ENGINE: django.db.backends.postgresql
          TRAK_DB_HOST: localhost
          TRAK_DB_USER: ${{ env.POSTGRES_USER }}
          TRAK_DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          TRAK_DB_NAME: ${{ env.POSTGRES_DB }}
          TRAK_DB_PORT: ${{ job.services.postgres.ports[5432] }}
        run: uv run pytest -n auto
