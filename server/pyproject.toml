[project]
name = "haztrak"
version = "0.9.0"
requires-python = ">=3.13,<3.14"
description = "An open-source web app illustrating how waste management software can interface with RCRAInfo to track hazardous waste"
readme = "README.md"
authors = [
    { name = "David Graham", email = "graham.david@epa.gov" },
]
maintainers = [
    { name = "David Graham", email = "graham.david@epa.gov" },
]
classifiers = [
    "Framework :: Django",
    "Programming Language :: Python :: 3",
]

license = { text = "MIT" }

dependencies = [
    "django==5.2.7",
    "django-celery-results==2.6.0",
    "django-cors-headers==4.9.0",
    "django-extensions==4.1",
    "django-celery-beat==2.8.1",
    "djangorestframework==3.16.1",
    "gunicorn==23.0.0",
    "emanifest==4.0.3",
    "psycopg[binary]==3.2.12",
    "whitenoise==6.11.0",
    "celery>=5.5.3,<5.6.0",
    "redis==7.0.0",
    "drf-spectacular==0.28.0",
    "django-health-check==3.20.0",
    "django-guardian==3.2.0",
    "django-allauth[socialaccount]>=65.12.1,<66.0.0",
    "uvicorn[standard]>=0.37.0",
    "pillow==12.0.0",
    "uvicorn-worker>=0.4.0",
    "django-ninja>=1.4.5",
    "pydantic>=2.12.3",
]

[dependency-groups]
lint = [
    "celery-types==0.23.0",
    "django-stubs-ext>=5.2.7",
    "django-stubs[compatible-mypy]>=5.2.7",
    "djangorestframework-stubs==3.16.5",
    "mypy==1.18.2",
    "mypy-extensions>=1.1.0",
    "ty>=0.0.1a24",
    "types-pillow>=10.2.0.20240822",
    "types-redis>=4.6.0",
    "ruff==0.14.2",
]
test = [
    "coverage==7.11.0",
    "faker==37.11.0",
    "pytest==8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-django==4.11.1",
    "pytest-mock>=3.15.1",
    "pytest-env>=1.2.0",
    "pytest-randomly>=4.0.1",
    "pytest-xdist>=3.8.0",
    "responses==0.25.8",
]
dev = [
    "pre-commit==4.3.0",
    { include-group = "lint" },
    { include-group = "test" },
]

[project.urls]
issues = "https://github.com/dpgraham4401/haztrak/issues"
documentation = "https://dpgraham4401.github.io/haztrak/"
homepage = "https://github.com/dpgraham4401/haztrak"
repository = "https://github.com/dpgraham4401/haztrak"

[tool.ruff]
line-length = 99
exclude = [
    "**/migrations/*.py",
    ".venv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "RUF", # ruff
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PT", # flake-pytest-style
    "PTH", # flake8-use-pathlib
    "PD", # pandas-vet
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
extend-ignore = [
    "RUF012",
]
[tool.ruff.lint.per-file-ignores]
"**/migrations/**.py" = ["D100", "D101", "D102", "D103", "E501", "RUF012"]
"**/tests/**/*.py" = ["S101", "E501", "PLR0917", "ISC001", "D100", "D101", "D102", "PLR0913", "PLR2004"]
"**/*serializer*.py" = ["N815"]
"**/views.py" = ["N815"]
"**/__init__.py" = ["D104"]
"**/models.py" = ["COM819"]

[tool.ruff.lint.isort]
known-first-party = ["haztrak", "profile", "wasteline", "rcrasite", "org", "manifest", "core"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["ninja.Query", "ninja.Depends", "ninja.File"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "haztrak.settings.test"
addopts = [
    "--strict-config",
    "--strict-markers",
    "--reuse-db",
    "--no-migrations",
    "--maxprocesses=4"
]

[tool.mypy]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
    "pydantic.mypy"
]
packages = [
    "haztrak",
    "core",
    "org",
    "rcrasite",
    "wasteline",
    "manifest",
    "profile",
]
exclude = [
    '/migrations\/.*.py',
    '.*\/tests\/.*\.py',
    '.*\/admin\.py',
    'conftest\.py',
    '.*/\tests\/.*\.py',
    '.*\/serializers\/.*\.py',
]
enable_error_code = [
    "truthy-bool",
    "truthy-iterable",
    "redundant-expr",
    "unused-awaitable",
    "ignore-without-code",
    "possibly-undefined",
    "redundant-self",
]
allow_redefinition = false
disallow_untyped_decorators = true
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_equality = true
strict_optional = true
show_error_codes = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true

[tool.django-stubs]
django_settings_module = "haztrak.settings.test"
strict_settings = false
